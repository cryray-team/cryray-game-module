#include "common.h"
#include "lmodel.h"
#include "shadow.h"

#ifndef ISAMPLE
#define ISAMPLE 0
#endif

#ifdef GBUFFER_OPTIMIZATION
float4 main ( float2 tc : TEXCOORD0, float2 tcJ : TEXCOORD1, float4	Color	: COLOR, float4 pos2d : SV_Position ) : SV_Target
#else
float4 main ( float2 tc : TEXCOORD0, float2 tcJ : TEXCOORD1 ) : SV_Target
#endif
{
	//float4 	_P	= tex2D( s_position, tc );
	//float4	_N	= tex2D( s_normal, tc );

#ifdef GBUFFER_OPTIMIZATION
	gbuffer_data gbd = gbuffer_load_data( tc, pos2d, ISAMPLE );
#else
	gbuffer_data gbd = gbuffer_load_data( tc, ISAMPLE );
#endif

	float4 _P = float4( gbd.P, gbd.mtl );
	float4  _N = float4( gbd.N, gbd.hemi );

	// ----- light-model
	float	m	= xmaterial;
# ifndef USE_R2_STATIC_SUN
			m 	= _P.w;
# endif
	float4	light	= plight_infinity ( m, _P, _N, Ldynamic_dir );

	// ----- shadow
  	float4 	P4 	= float4( _P.x, _P.y, _P.z, 1.f);
	float4 	PS	= mul( m_shadow, P4 );
	float 	s 	= sunmask( P4 );
    s 	*= shadow( PS );

	return 		blend( Ldynamic_color * light * s, tc );
}
